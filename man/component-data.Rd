% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/component-data.R
\name{component-data}
\alias{component-data}
\title{Component Data}
\description{
Data is used for a component's internal state and
can also be used to pass information from a parent component to its children.
Both component templates and methods have access to component data.
}
\details{
\subsection{Creating data}{

To create component data, define a function that returns a list of named
objects. These objects can be Shiny reactive objects, data frames, lists,
or any other R object.

For instance, the following is a valid data function:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{function() \{
 list(
   rctv = shiny::reactiveVal(),
   df   = mtcars
 )
\}
}\if{html}{\out{</div>}}
}

\subsection{Accessing data}{

Data can be accessed in both the methods and template parts of the component via the \code{self} keyword.
For example, the following component defines the data \code{foo}, and accesses it in the template via \code{self$foo}.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{x <- component(
    data = function() \{
        list(
            foo = 1L
        )
    \},
    template = function(ns) \{
        self$foo
    \}
)

print(x())
#> <rsx::instance> `component-QI108785lg`
#> 1
}\if{html}{\out{</div>}}
}

\subsection{Passing data}{

To pass data to a component, use the \code{data} argument when calling the
component function. The \code{data} argument should be a list of named objects
that match the names of the objects defined in the component's data
function. For example:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{x <- component(
    data = function() \{
        list(
            foo = 1L
        )
    \},
    template = function(ns) \{
        self$foo
    \}
)

print(x(data = list(foo = 2L)))
#> <rsx::instance> `component-RY105023fs`
#> 2
}\if{html}{\out{</div>}}
}
}
\seealso{
Other components: 
\code{\link{component-methods}},
\code{\link{component-styles}},
\code{\link{component-template}},
\code{\link{component}()}
}
\concept{components}
