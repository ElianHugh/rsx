% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/component-methods.R
\name{component-methods}
\alias{component-methods}
\title{Component Methods}
\description{
Methods are a list of functions that are contained within a given component,
and typically will manipulate component data or respond to user input.

Methods can be accessed in both other methods and the component template
via the \code{self} keyword.
}
\details{
Methods are defined in the component definition as a named list of functions.

For example, the following is a method section from a simple counter component that defines two methods,
setup and increment, which respectively set up the module server and increment the count state:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{methods = list(
    setup = function(input, output, session) \{
        output$txt <- renderText(\{
            paste0("Count is: ", self$count())
        \})
        observeEvent(input$button, \{
            self$count(self$count() + 1L)
        \})
    \},
    increment = function() \{
        self$count(self$count() + 1L)
    \}
)
}\if{html}{\out{</div>}}
\subsection{Hooks}{
\subsection{Setup}{

The setup hook is defined by passing a function named "setup" to the
methods list. Setup is used as the module server for the component.
This method is called when the module is first initialized, and is used to set up
input/output bindings and any other necessary initialization code.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{setup = function(input, output, session) \{

\}
}\if{html}{\out{</div>}}
}

\subsection{Render}{

The \code{render} hook is defined by passing a function named "render" to
the methods list. The render hook allows for the modification of template code
prior to its rendering.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{render = function(element) \{

\}
}\if{html}{\out{</div>}}
}

}
}
\seealso{
Other components: 
\code{\link{component-data}},
\code{\link{component-styles}},
\code{\link{component-template}},
\code{\link{component}()}
}
\concept{components}
