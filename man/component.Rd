% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/component-core.R
\name{component}
\alias{component}
\title{Create a component}
\usage{
component(
  name = sprintf("unnamed_component-\%s", random_id()),
  data = NULL,
  methods = NULL,
  template = NULL,
  styles = NULL
)
}
\arguments{
\item{name}{component name}

\item{data}{a function that returns a named list of values, which are used to store the component's state}

\item{methods}{named list of functions, which define the behavior of the component}

\item{template}{function that returns a taglist}

\item{styles}{character vector of CSS styles that are scoped to the component}
}
\description{
Components represent the encapsulation of a shiny module's
logic and UI into a singular object, and can be used like
any other shiny tag.

For more information on the data, methods, template, and styles arguments, see related documentation.
}
\examples{
library(shiny)
counter <- component(
    name = "counter",
    data = function() {
        list(
            label = "Counter",
            count = reactiveVal(0L)
        )
    },
    template = function(ns) {
        tagList(
            actionButton(ns("button"), label = self$label),
            verbatimTextOutput(ns("out"))
        )
    },
    methods = list(
        setup = function(input, output, session) {
            observeEvent(input$button, {
                self$count(
                    self$count() + 1L
                )
            })
            output$out <- renderText(
                self$count()
            )
        }
    )
)
tagList(
 tags$h1("Counter"),
 counter()
)

}
\seealso{
Other components: 
\code{\link{component-data}},
\code{\link{component-methods}},
\code{\link{component-styles}},
\code{\link{component-template}}
}
\concept{components}
